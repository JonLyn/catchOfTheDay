{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","console","log","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvaialble","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","deleteFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","img","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","image","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","store","context","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","loadSampleFishes","sampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","isAvailable","src","alt","disabled","addToOrder","App","Date","now","alert","params","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","syncState","setItem","stringify","removeBinding","notFound","Router","BrowserRouter","Switch","Route","exact","path","NotFound","render","document","querySelector"],"mappings":"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","file":"static/js/main.7060ee01.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  }\r\n\r\n  myInput = React.createRef();\r\n\r\n  goToStore = event => {\r\n    event.preventDefault();\r\n    const storeName = this.myInput.current.value;\r\n    console.log(this);\r\n    this.props.history.push(`/store/${storeName}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n          <h2>Please Enter A Store</h2>\r\n          <input \r\n            type=\"text\"\r\n            ref={this.myInput}\r\n            required \r\n            placeholder=\"Store Name\"\r\n            defaultValue={getFunName()}  \r\n          />\r\n          <button type=\"submit\">Visit Store</button>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StorePicker;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => (\r\n  <header className=\"top\">\r\n    <h1>Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>  \r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    deleteFromOrder: PropTypes.func\r\n  }\r\n\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvaialble = fish && fish.status === 'available'\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    }\r\n    if(!fish) {\r\n      return null;\r\n    }\r\n    if(!isAvaialble) {\r\n      return (\r\n        <CSSTransition {...transitionOptions} >\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : 'fish'} is unavailable\r\n          </li>\r\n        </CSSTransition>\r\n      )\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions} >\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs { fish.name }\r\n            { formatPrice(count * fish.price) }\r\n            <button onClick={()=> this.props.deleteFromOrder(key)}>&times;</button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if(isAvailable) {\r\n        return prevTotal + (count * fish.price);\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return <div className=\"order-wrap\">\r\n      <h2>Order</h2> \r\n      <TransitionGroup component=\"ul\" className=\"order\">\r\n        {orderIds.map(this.renderOrder)}\r\n      </TransitionGroup>\r\n      <div className=\"total\">\r\n        Total:\r\n        <strong>{formatPrice(total)}</strong>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Order;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n  }\r\n\r\n  createFish = event => {\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      statusRef: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      img: this.imageRef.current.value\r\n    }\r\n    this.props.addFish(fish);\r\n    event.currentTarget.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>  \r\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>  \r\n        <select name=\"status\"ref={this.statusRef} > \r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select> \r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"/>  \r\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>  \r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      name: PropTypes.string, \r\n      image: PropTypes.string,\r\n      desc: PropTypes.string, \r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    index: PropTypes.string,\r\n    updatedFish: PropTypes.func,\r\n    deleteFish: PropTypes.func\r\n  }\r\n\r\n  handleChange = event => {\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name}/>\r\n        <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price}/>\r\n        <select name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}/>\r\n        <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image}/>\r\n        <button onClick={()=> this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory</p>\r\n    <button className=\"github\" onClick={()=> props.authenticate(\"Github\")}>Log in with Github</button>\r\n\r\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>Log in with Twitter</button>\r\n\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>Log in with Facebook</button>\r\n  </nav>\r\n)\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCWjo5M2Vxa2HfWaJezdB1QXstml1sFi1A\",\r\n    authDomain: \"catch-of-the-day---jon.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day---jon-default-rtdb.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    addFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.store, { context: this });\r\n    // 2. Claim it if there is no owner\r\n    if(!store.owner) {\r\n      //save it as our own\r\n      await base.post(`${this.props.store}/owner`, {\r\n        data: authData.user.uid\r\n      })\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  }\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  }\r\n\r\n  logout = async () => {\r\n    console.log('logging out!');\r\n    await firebase.auth().signOut();\r\n    this.setState({\r\n      uid: null\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate}/>\r\n    }\r\n\r\n    // 2. Check if the yare not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // 3. They must be the owner - just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm \r\n            key={key} \r\n            index={key}\r\n            fish={this.props.fishes[key]} \r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\r\nconst sampleFishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default sampleFishes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    detail: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n  }\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name}/>\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{isAvailable? \"Add To Order\" : \"Sold Out\"}</button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if(localStorageRef) {\r\n      this.setState ({\r\n        order: JSON.parse(localStorageRef)\r\n      })\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes'\r\n    });\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n\r\n  addFish = fish => {\r\n    const fishes = { ...this.state.fishes };\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    this.setState({\r\n      fishes: fishes\r\n    })\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    const fishes = {...this.state.fishes};\r\n    fishes[key] = updatedFish;\r\n    this.setState({\r\n      fishes: fishes\r\n    })\r\n  }\r\n\r\n  deleteFish = (key) => {\r\n    const fishes = { ...this.state.fishes };\r\n    fishes[key] = null;\r\n    this.setState({\r\n      fishes: fishes\r\n    })\r\n  }\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({\r\n      fishes: sampleFishes\r\n    })\r\n    alert('loading sample');\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    const order = {...this.state.order};\r\n    order[key] = order[key] + 1 || 1;\r\n    this.setState({\r\n      order: order\r\n    })\r\n  };\r\n  \r\n  deleteFromOrder = (key) => {\r\n    const order = {...this.state.order};\r\n    delete order[key];\r\n    this.setState({\r\n      order: order\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh seafood market\"/>\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)}\r\n          </ul>\r\n        </div>\r\n        <Order \r\n          fishes={this.state.fishes} \r\n          order={this.state.order} \r\n          deleteFromOrder={this.deleteFromOrder} \r\n        />\r\n        <Inventory \r\n          addFish={this.addFish} \r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          store={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","import React from \"react\";\r\n\r\nconst notFound = () => (\r\n  <div>\r\n    <h2>Not Found!!!</h2>\r\n  </div>\r\n);\r\n\r\nexport default notFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App}/>\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router'\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}